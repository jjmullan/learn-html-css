/* 전역 변수 1차 정의 */
:root {
  --primary-color: #3498db;
  --secondary-color: #2ecc71;

  --white: #fff;
  --black: #000;
  --red: #f00;
  --green: #0f0;
  --blue: #00f;
  --orange: orange;
}

/* 전역 변수와 지역 변수에 동일한 변수 명을 지정한 경우, 지역 변수의 값이 우선 순위를 갖는다 */
.text-card-1 {
  --bg-color: var(--green);
  --border-color: var(--red);

  h1 {
    background-color: var(--bg-color);
  }

  p {
    border: 10px solid var(--border-color);
  }
}

.text-card-2 {
  --bg-color: var(--blue);
  --border-color: var(--green);

  h1 {
    background-color: var(--bg-color);
  }

  p {
    border: 10px solid var(--border-color);
  }
}

/* ===================================================================== */

/* 전역 변수를 컴포넌트에서 재선언하는 예제 */
:root {
  --small: 0.75rem;
  --medium: 0.875rem;
  --default: 1rem;
  --large: 1.125rem;
}

/* 컴포넌트 별로 동일한 변수명을 선언하고, 변수에 할당하는 값에 root 의 변수를 개별로 설정할 수 있다 */
.wrapper {
  button {
    font-size: var(--font-size);
    background-color: var(--bg-color);
    color: var(--text-color);
  }

  .open {
    --font-size: var(--small);
    --bg-color: var(--blue);
    --text-color: var(--white);
  }

  .close {
    --font-size: var(--medium);
    --bg-color: var(--red);
    --text-color: var(--white);
  }

  .popup {
    --font-size: var(--default);
    --bg-color: var(--green);
    --text-color: var(--black);
  }

  .info {
    --font-size: var(--large);
    --bg-color: var(--black);
    --text-color: var(--white);
  }
}

/* ===================================================================== */

@property --text-color {
  syntax: '<color>';

  /* 상속을 받지 않겠다 */
  inherits: false;

  /* initial-value : 초기 설정 값 */
  initial-value: orange;
}

.container {
  /* @property 를 사용하면, 1. 지역 변수를 할당하고 2. 값을 재할당하여 사용하는 2단계를 거칠 필요가 없다 */
  color: var(--text-color);

  .parent {
    --text-color: blue;
    color: var(--text-color);

    .child {
      /* @property 에서 inherits: false; 를 했기 때문에 .container 의 지역 변수 값을 상속받지 않는다. */
      color: var(--text-color);
    }
  }
}
