@import url(/src/common/modern-reset.css);

body {
  font-family: 'SUIT', sans-serif;
}

.card {
  /* 배경색을 칠해놓고 작업하면, 작업 영역을 쉽게 알 수 있어 용이하다. 작업 후 삭제하기! */
  /* background-color: pink; */

  /* 글자 크기에 따라 margin, padding 이 같이 작동할 수 있도록 em 단위를 많이 사용한다. */
  margin: 2em;            /* 2em * 16px = 32px */
  padding: 2em;
  font-size: 16px;        /* em 값이 font-size 값 기준으로 재설정된다 -> (e.g. f-s: 8px) 1em = 8px */ 

  border: 1px solid red;
  /* border-radius: 0 0.5rem 0 0.5rem / 0 20px 0 20px; */
  border-radius: 0.5rem;

  &.good-partner {
    /* BFC 설정 */
    display: flow-root;
  }
  
  .subject {
    /* background-color: blue; */
    /* width 를 지정하지 않으면, 즉 auto 로 지정하면 부모 요소의 패딩 영역을 침범하지 않는 선까지 영역을 확보한다 */

    font-size: 1.5rem;
    font-weight: 600;

    span {
      vertical-align: top;

      &[lang="en"] {
        font-size: 0.5em;     /* 12px */
      }
    }
  }

  .thumbnail {
    --radius: 50%;

    border: 1px solid #ccc;

    float: left;
    /*  */
    shape-outside: circle(50%);

    font-size: 16px;
    margin: 1em;  /* 16px * 1em = 16px */
    padding: 1em;  /* 16px * 1em = 16px */

    border-radius: 50%;
    border-radius: var(--radius, 50%);
    
    /* @import(reset) 에서 img { max-width: 100% } 가 설정되어 있기 때문에, 부모 요소에 width 값을 넣으면 하위 요소인 img 는 100% 사이즈로 반응형으로 동작하게 된다.  */
    width: 120px;
    /* height: auto; */
    
    img {
      border-radius: inherit;  /* 부모-자식 관계를 활용한 상속 설정 */
      border-radius: var(--radius, 50%);  /* 지역 변수를 선언, 값을 사용 */
      
      /* 이미지의 가로/세로 비율을 강제로 변경할 수 있다. */
      aspect-ratio: 1/1;

      /* 콘텐츠 크기를 가로로 꽉차게(cover), 또는 세로로 꽉차게(contain) 만들 수 있다. */
      object-fit: cover;

      /* 오브젝트의 오프셋을 x축, y축 방향으로 설정할 수 있다. */
      object-position: 0 40%;
    }
  }

  .content {
    margin-top: 0.725em;
  }
}
